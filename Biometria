import javax.swing.*;
import javax.swing.border.BevelBorder;

import java.awt.*;
import java.awt.event.*;
import com.nitgen.SDK.BSP.NBioBSPJNI;

public class NBioAPI_JavaDemo extends JFrame {
    private JButton btnOpen;
    private JLabel labelStatus;
    private NBioBSPJNI bsp;

    public NBioAPI_JavaDemo() {
        btnOpen = new JButton("OPEN");
        btnOpen.setEnabled(false);
        btnOpen.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                openDevice();
            }
        });

        labelStatus = new JLabel("No Error");
        labelStatus.setBorder(BorderFactory.createBevelBorder(BevelBorder.RAISED));

        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setTitle("Nisa Sistema");

        JPanel panel = new JPanel(new BorderLayout());
        panel.add(btnOpen, BorderLayout.NORTH);
        panel.add(labelStatus, BorderLayout.SOUTH);

        add(panel);
        pack();
        setVisible(true);

        bsp = new NBioBSPJNI();

        if (CheckError()) {
            return;
        }

        setDeviceList();
    }

    private void openDevice() {
        labelStatus.setText("NBioBSP OpenDevice start");

        int openedDevice = bsp.OpenDevice();

        if (CheckError()) {
            return;
        }

        btnOpen.setEnabled(false);
        labelStatus.setText("NBioBSP OpenDevice success");

        // Adicionado código para capturar a impressão digital
        NBioBSPJNI.FIR_HANDLE hSavedFIR = bsp.new FIR_HANDLE();
        NBioBSPJNI.INPUT_FIR inputFIR = bsp.new INPUT_FIR();
        inputFIR.SetFIRHandle(hSavedFIR);

        int nCaptured = bsp.Capture(NBioBSPJNI.FIR_PURPOSE.VERIFY, inputFIR, -1, null, null);

        if (CheckError()) {
            return;
        }

        if (nCaptured > 0) {
            labelStatus.setText("Fingerprint captured");
            
            // Agora você pode processar os dados capturados aqui
            byte[] capturedData = new byte[bsp.GetTemplateSize()];
            bsp.GetFIRFromHandle(hSavedFIR, capturedData);
            
            // Exemplo: Exibindo os dados capturados como uma string hexadecimal
            StringBuilder hexString = new StringBuilder();
            for (byte b : capturedData) {
                hexString.append(String.format("%02X ", b));
            }
            System.out.println("Dados capturados: " + hexString.toString());
        } else {
            labelStatus.setText("No fingerprint captured");
        }
    }

    private void setDeviceList() {
        labelStatus.setText("Enumerating Devices...");

        NBioBSPJNI.DEVICE_ENUM_INFO deviceEnumInfo = bsp.new DEVICE_ENUM_INFO();
        bsp.EnumerateDevice(deviceEnumInfo);

        if (CheckError()) {
            btnOpen.setEnabled(false);
            return;
        }

        int n = deviceEnumInfo.DeviceCount;

        if (n == 0) {
            labelStatus.setText("Can not find Device!!");
            btnOpen.setEnabled(false);
            return;
        }

        btnOpen.setEnabled(true);

        labelStatus.setText("Device Enumeration Complete");
    }

    private Boolean CheckError() {
        if (bsp.IsErrorOccured()) {
            labelStatus.setText("NBioBSP Error Occured [" + bsp.GetErrorCode() + "]");
            return true;
        }

        return false;
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                new NBioAPI_JavaDemo();
            }
        });
    }
}
